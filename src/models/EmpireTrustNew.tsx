/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useRef } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh;
  };
  materials: {};
};

export default function EmpireTrust({
  ...props
}: JSX.IntrinsicElements["group"]) {
  const scroll = useScroll();

  const group = useRef<any>();
  const { nodes, materials } = useGLTF(
    "/EmpireTrustNew-transformed.glb"
  ) as unknown as GLTFResult;

  useFrame((state) => {
    const r1 = scroll.range(0, 4);
    const t = state.clock.getElapsedTime()
    group.current.rotation.y = r1 * 15;
  });
  return (
    <group ref={group} {...props} dispose={null} scale={0.05}>
      <mesh
        rotation={[80, 0, 0]}
        geometry={nodes.mesh_0.geometry}
        material={nodes.mesh_0.material}
      />
    </group>
  );
}

useGLTF.preload("/EmpireTrustNew-transformed.glb");
