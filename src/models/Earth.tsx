/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import {
  useGLTF,
  useAnimations,
  useTexture,
  useScroll,
} from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Earth: THREE.Mesh;
    Clouds: THREE.Mesh;
  };
  materials: {
    clouds: THREE.MeshStandardMaterial;
  };
};

type ActionName = "CloudsAction";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<any>();
  const { nodes, materials, animations } = useGLTF(
    "/Earth-transformed.glb"
  ) as unknown as GLTFResult;
  const { actions } = useAnimations<any>(animations, group);
  const scroll = useScroll();

  useFrame((state) => {
    const t = state.clock.getElapsedTime();
    const r1 = scroll.range(0, 2);

    group.current.rotation.y = r1 * 20;
    group.current.rotation.x = r1 * 4;

   
    
    
  });
  const bakedTexture = useTexture("/Earth_Illumination_6K.jpg");
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Earth"
          geometry={nodes.Earth.geometry}
          rotation={[0, 0, -0.3]}
          scale={199.99}
        >
          <meshBasicMaterial map={bakedTexture} map-flipY={false} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/Earth-transformed.glb");
