/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useTexture } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    InformationBox: THREE.Mesh
  }
  materials: {
    DefaultMaterial: THREE.MeshStandardMaterial
  }
}

export default function Desk({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const bakedMap = useTexture('/Blue_Haze.jpg')
  const { nodes, materials } = useGLTF('/Desk-transformed.glb') as unknown as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.InformationBox.geometry} rotation={[-Math.PI / 2, 0, 0]} scale={100} >
        <meshBasicMaterial map={bakedMap} map-flipY={false} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/Desk-transformed.glb')
